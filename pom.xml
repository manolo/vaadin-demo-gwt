<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.vaadin.polymer</groupId>
  <artifactId>demo</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>com.vaadin.polymer.demo</name>

  <properties>
    <gwt.version>2.8.0.JETTY9-SNAPSHOT</gwt.version>
    <vaadin.version>7.6.1</vaadin.version>
    <jetty.version>9.2.14.v20151106</jetty.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <repositories>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <id>vaadin-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
    <repository>
      <id>google-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/google-snapshots/</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
    <repository>
      <id>manolo-repo</id>
      <url>https://github.com/manolo/gwt-snapshot/raw/master/</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
     </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt</artifactId>
        <version>${gwt.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-elemental</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-push</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin.polymer</groupId>
      <artifactId>vaadin-gwt-polymer-elements</artifactId>
      <version>1.2.3.1-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.gwtquery</groupId>
      <artifactId>gwtquery</artifactId>
      <version>1.4.4-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.0</version>
    </dependency>

    <!-- Using scope test here to use it in unpack dependencies below -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiler</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Enable servlet 3 annotations -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
     <groupId>org.eclipse.jetty</groupId>
     <artifactId>jetty-annotations</artifactId>
     <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- Output classes directly into the webapp, so that IDEs and "mvn process-classes" update them in DevMode -->
    <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>

    <plugins>
      <plugin>
        <groupId>net.ltgt.gwt.maven</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>1.0-rc-6</version>
        <executions>
          <execution>
            <goals>
              <goal>import-sources</goal>
              <goal>compile</goal>
              <goal>import-test-sources</goal>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <moduleName>com.vaadin.gwtdemo.GwtDemoWidgetset</moduleName>
          <moduleShortName>com.vaadin.gwtdemo.GwtDemoWidgetset</moduleShortName>
          <!-- Vaadin apps expect the js output in this folder -->
          <webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>
          <failOnError>true</failOnError>
          <compilerArgs>
            <!-- <arg>-compileReport</arg> -->
            <!-- <arg>-XcompilerMetrics</arg> -->
            <arg>-gen</arg><arg>${project.build.directory}/generated-sources</arg>
          </compilerArgs>

          <!-- DevMode configuration -->
          <devmodeArgs>
            <!-- For SDM we need to inform where the js is produced -->
            <arg>-modulePathPrefix</arg><arg>VAADIN/widgetsets</arg>
          </devmodeArgs>
          <warDir>${project.build.directory}/${project.build.finalName}</warDir>
          <classpathScope>compile+runtime</classpathScope>
          <startupUrls>
            <startupUrl>/</startupUrl>
          </startupUrls>

        </configuration>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>
        <configuration>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
          <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
          <draftCompile>false</draftCompile>
          <compileReport>false</compileReport>
          <style>OBF</style>
          <strict>true</strict>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>update-theme</goal>
              <!-- Don't update widgetset this breaks the build with gwt compiler -->
              <!-- <goal>update-widgetset</goal> -->
              <!-- Don't compile, let GWT compile the widgetset -->
              <!-- <goal>compile</goal> -->
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
                <failOnMissingWebXml>false</failOnMissingWebXml>
                <packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
                        WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
        </configuration>
      </plugin>

      <plugin>
         <artifactId>maven-resources-plugin</artifactId>
         <executions>
           <execution>
             <id>copy-resources</id>
             <phase>generate-sources</phase>
             <goals>
               <goal>copy-resources</goal>
             </goals>
             <configuration>
               <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
               <resources>
                 <resource>
                  <directory>src/main/webapp</directory>
                 </resource>
               </resources>
             </configuration>
           </execution>
         </executions>
       </plugin>

       <plugin>
         <groupId>org.mortbay.jetty</groupId>
         <artifactId>jetty-maven-plugin</artifactId>
       </plugin>

       <!-- Import Vaadin dependencies using the resources plugin so as we can remove gwt libraries -->
       <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>vaadin-client-compiler-classes</id>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>unpack-dependencies</goal>
                    </goals>
                    <configuration>
                        <includeGroupIds>com.vaadin</includeGroupIds>
                        <includeArtifactIds>vaadin-client-compiler,vaadin-client</includeArtifactIds>
                        <includes>com/vaadin/**</includes>
                        <excludes>**/MessageSender.*,**/LayoutManager.*,**/MessageHandler.*,**/client/metadata/Property.*</excludes>
                        <outputDirectory>
                            ${project.build.directory}/generated-sources
                        </outputDirectory>
                    </configuration>
                </execution>
            </executions>
            <dependencies>
            </dependencies>
        </plugin>

        <plugin>
             <groupId>org.codehaus.mojo</groupId>
             <artifactId>build-helper-maven-plugin</artifactId>
             <executions>
                 <execution>
                     <id>add-source</id>
                     <phase>generate-sources</phase>
                     <goals>
                         <goal>add-source</goal>
                     </goals>
                     <configuration>
                         <sources>
                             <source>${project.build.directory}/generated-sources</source>
                         </sources>
                     </configuration>
                 </execution>
             </executions>
         </plugin>
    </plugins>
  </build>
</project>
